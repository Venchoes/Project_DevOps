name: CI com Jest, Semgrep (SAST) e Deploy na Vercel

on:
  push:
    branches: [ main ]

env:
  SITE_URL: 'https://project-dev-ops-rouge.vercel.app/'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    outputs:
      deployment-url: ${{ steps.vercel.outputs.url || '' }}
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Instalar dependências
        run: npm ci

      - name: Executar testes com Jest
        run: npm test

      # -------------------------
      # SAST: Semgrep (open-source)
      # -------------------------
      - name: Executar Semgrep (SAST)
        uses: docker://semgrep/semgrep:latest
        with:
          args: semgrep --config=auto --timeout 300

      # -------------------------
      # Deploy para Vercel
      # -------------------------
      - name: Deploy para Vercel (via Vercel Action)
        id: vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-args: '--prod --confirm'
          working-directory: './'
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

      - name: Salvar URL de deploy
        if: always()
        run: |
          echo "DEPLOY_URL=${{ env.SITE_URL }}" >> $GITHUB_ENV


  zap-scan:
    needs: [ build-and-test ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: OWASP ZAP - Baseline scan (DAST)
        uses: zaproxy/action-baseline@v0.4.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}      
          target: ${{ env.SITE_URL }}             
          docker_name: 'owasp/zap2docker-weekly'  
          fail_action: false                      
